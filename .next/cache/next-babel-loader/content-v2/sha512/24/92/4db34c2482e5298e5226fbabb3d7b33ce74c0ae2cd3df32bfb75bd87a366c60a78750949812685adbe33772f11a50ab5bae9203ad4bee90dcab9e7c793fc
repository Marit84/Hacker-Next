{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\mpedersen\\\\Desktop\\\\hacker-next\\\\components\\\\Comment.js\",\n    _this = this;\n\nvar Comment = function Comment(_ref) {\n  var comment = _ref.comment;\n  return console.log(comment) || /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-user\",\n      children: comment.user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-content\",\n      dangerouslySetInnerHTML: {\n        __html: comment.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 9\n    }, _this), comment.comments && /*#__PURE__*/_jsxDEV(\"duv\", {\n      className: \"nested-comments\",\n      children: comment.comments.map(function (nestedComment) {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          comment: nestedComment\n        }, nestedComment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 2,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["C:/Users/mpedersen/Desktop/hacker-next/components/Comment.js"],"names":["Comment","comment","console","log","user","__html","content","comments","map","nestedComment","id"],"mappings":";;;;;AAAA,IAAMA,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,OAAH,QAAGA,OAAH;AAAA,SAAiBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,kBAC7B;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBAA+BA,OAAO,CAACG;AAAvC;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAACJ,OAAO,CAACK;AAAjB;AAA1D;AAAA;AAAA;AAAA;AAAA,aAFJ,EAIKL,OAAO,CAACM,QAAR,iBACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,gBACKN,OAAO,CAACM,QAAR,CAAiBC,GAAjB,CAAqB,UAAAC,aAAa;AAAA,4BAC/B,QAAC,OAAD;AAAgC,UAAA,OAAO,EAAEA;AAAzC,WAAcA,aAAa,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,iBAD+B;AAAA,OAAlC;AADL;AAAA;AAAA;AAAA;AAAA,aALR;AAAA;AAAA;AAAA;AAAA;AAAA,WADY;AAAA,CAAhB;;KAAMV,O;AAgBN,eAAeA,OAAf","sourcesContent":["const Comment = ({ comment }) => console.log(comment) || (\r\n    <div className=\"comment\">\r\n        <div className=\"comment-user\">{comment.user}</div>\r\n        <div className=\"comment-content\" dangerouslySetInnerHTML={{ __html:comment.content }}>\r\n        </div>\r\n        {comment.comments && (\r\n            <duv className=\"nested-comments\">\r\n                {comment.comments.map(nestedComment => (\r\n                    <Comment key={nestedComment.id} comment={nestedComment} />\r\n                ))}\r\n            </duv>\r\n        )}\r\n    </div>\r\n\r\n)\r\n\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}